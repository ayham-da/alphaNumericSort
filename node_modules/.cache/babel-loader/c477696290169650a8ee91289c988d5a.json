{"ast":null,"code":"import React from'react';var alphaNumericSort=function alphaNumericSort(){var arr=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var sorter=function sorter(a,b){var isNumber=function isNumber(v){return(+v).toString()===v;};var aPart=a.match(/\\d+|\\D+/g);var bPart=b.match(/\\d+|\\D+/g);var i=0;var len=Math.min(aPart.length,bPart.length);while(i<len&&aPart[i]===bPart[i]){i++;};if(i===len){return aPart.length-bPart.length;};if(isNumber(aPart[i])&&isNumber(bPart[i])){return aPart[i]-bPart[i];};return aPart[i].localeCompare(bPart[i]);};arr.sort(sorter);};export default alphaNumericSort;","map":{"version":3,"sources":["/Users/aeddin/alphaNumericSort/src/alphaNumericSort.js"],"names":["React","alphaNumericSort","arr","sorter","a","b","isNumber","v","toString","aPart","match","bPart","i","len","Math","min","length","localeCompare","sort"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAc,IAAbC,CAAAA,GAAa,2DAAP,EAAO,CACnC,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,CAAD,CAAIC,CAAJ,CAAU,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,QAAO,CAAC,CAACA,CAAF,EAAKC,QAAL,KAAoBD,CAA3B,EAAjB,CACA,GAAME,CAAAA,KAAK,CAAGL,CAAC,CAACM,KAAF,CAAQ,UAAR,CAAd,CACA,GAAMC,CAAAA,KAAK,CAAGN,CAAC,CAACK,KAAF,CAAQ,UAAR,CAAd,CACA,GAAIE,CAAAA,CAAC,CAAG,CAAR,CAAW,GAAIC,CAAAA,GAAG,CAAGC,IAAI,CAACC,GAAL,CAASN,KAAK,CAACO,MAAf,CAAuBL,KAAK,CAACK,MAA7B,CAAV,CACX,MAAOJ,CAAC,CAAGC,GAAJ,EAAWJ,KAAK,CAACG,CAAD,CAAL,GAAaD,KAAK,CAACC,CAAD,CAApC,CAAyC,CAAEA,CAAC,GAAK,EACjD,GAAIA,CAAC,GAAKC,GAAV,CAAe,CACX,MAAOJ,CAAAA,KAAK,CAACO,MAAN,CAAeL,KAAK,CAACK,MAA5B,CACH,EACD,GAAIV,QAAQ,CAACG,KAAK,CAACG,CAAD,CAAN,CAAR,EAAsBN,QAAQ,CAACK,KAAK,CAACC,CAAD,CAAN,CAAlC,CAA8C,CAC1C,MAAOH,CAAAA,KAAK,CAACG,CAAD,CAAL,CAAWD,KAAK,CAACC,CAAD,CAAvB,CACH,EACD,MAAOH,CAAAA,KAAK,CAACG,CAAD,CAAL,CAASK,aAAT,CAAuBN,KAAK,CAACC,CAAD,CAA5B,CAAP,CAA0C,CAZ9C,CAaAV,GAAG,CAACgB,IAAJ,CAASf,MAAT,EACH,CAfD,CAkBA,cAAeF,CAAAA,gBAAf","sourcesContent":["import React from 'react';\n\nconst alphaNumericSort = (arr = []) => {\n    const sorter = (a, b) => {\n        const isNumber = (v) => (+v).toString() === v;\n        const aPart = a.match(/\\d+|\\D+/g);\n        const bPart = b.match(/\\d+|\\D+/g);\n        let i = 0; let len = Math.min(aPart.length, bPart.length);\n        while (i < len && aPart[i] === bPart[i]) { i++; };\n        if (i === len) {\n            return aPart.length - bPart.length;\n        };\n        if (isNumber(aPart[i]) && isNumber(bPart[i])) {\n            return aPart[i] - bPart[i];\n        };\n        return aPart[i].localeCompare(bPart[i]); };\n    arr.sort(sorter);\n};\n\n\nexport default alphaNumericSort;\n"]},"metadata":{},"sourceType":"module"}